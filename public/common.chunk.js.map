{"version":3,"sources":["C:/Users/Leiviton/Documents/teste/web/src/app/user/components/logar.component.html","C:/Users/Leiviton/Documents/teste/web/src/app/user/components/login.component.ts","C:/Users/Leiviton/Documents/teste/web/src/app/user/services/auth.service.ts"],"names":[],"mappings":"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","file":"common.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"app flex-row align-items-center login\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <div class=\\\"card-group mb-0\\\">\\r\\n                    <div class=\\\"card p-4\\\">\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"text-center\\\"><img src=\\\"assets/img/leiviton.png\\\" alt=\\\"\\\"></div>\\r\\n                            <form #myForm=\\\"ngForm\\\" (submit)=\\\"login($event)\\\">\\r\\n                                <div class=\\\"form-group mb-3\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\">Usuário</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           [ngClass]=\\\"{'is-invalid': !username.valid && (username.dirty || username.touched),'is-valid': username.valid}\\\"\\r\\n                                           placeholder=\\\"Seu username...\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" id=\\\"username\\\"\\r\\n                                           #username=\\\"ngModel\\\" minlength=\\\"4\\\" required>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"!username.valid\\\">\\r\\n                                        Verifique o seu usuário.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group mb-4\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\">Senha</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': !password.valid && (password.dirty || password.touched),'is-valid':password.valid}\\\" placeholder=\\\"Sua senha...\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" id=\\\"password\\\" #password=\\\"ngModel\\\" required minlength=\\\"6\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"!password.valid\\\">\\r\\n                                        Senha deve ser maior que 5 caracteres.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-6 text-right\\\" style=\\\"right: -50%\\\">\\r\\n                                        <button type=\\\"submit\\\"  class=\\\"btn btn-lg btn-success\\\" [disabled]=\\\"!myForm.valid\\\">Acessar</button>\\r\\n                                        <a (click)=\\\"registry()\\\" class=\\\"btn-link\\\">Registrar-se</a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Leiviton/Documents/teste/web/src/app/user/components/logar.component.html\n// module id = ../../../../../src/app/user/components/logar.component.html\n// module chunks = common","import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\n\nimport * as jQuery from 'jquery';\n@Component({\n    templateUrl: './logar.component.html',\n})\nexport class LoginComponent {\n    user: any = {\n        username: null,\n        password: null,\n    };\n\n    constructor(private AuthService: AuthService, private router: Router) {\n        localStorage.setItem('user','');\n    }\n    registry()\n    {\n        this.router.navigate(['user/registry']);\n    }\n\n    login(e) {\n        e.preventDefault();\n\n        this.showLoading();\n        if (!this.user.username || !this.user.password) {\n            return;\n        }\n\n        let data = {\n            grant_type: 'password',\n            client_id: environment.client_id,\n            client_secret: environment.client_secret,\n            username: this.user.username,\n            password: this.user.password,\n            scope: ''\n        };\n\n        this.AuthService.login(data).then((res) => {\n            document.cookie = \"token=\" + res.access_token + \"; expires=\" + res.expires_in;\n            localStorage.setItem('token',res.access_token);\n            this.AuthService.setAccessToken();\n            this.AuthService.getUser()\n                .then((res) => {\n                    localStorage.setItem('user',JSON.stringify(res));\n                    this.hideLoading();\n                    this.router.navigate(['cadastro/secretfriend']);\n            });\n        }).catch(() => {\n            this.hideLoading();\n        })\n    }\n\n\n    hideLoading(){\n        jQuery(\"#bifrostBarSpinner\").hide();\n    }\n    showLoading(){\n        jQuery(\"#bifrostBarSpinner\").show();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Leiviton/Documents/teste/web/src/app/user/components/login.component.ts","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { AppHttpService } from '../../app-http.service';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class AuthService extends AppHttpService {\r\n    eventEmitter: EventEmitter<any> = new EventEmitter();\r\n\r\n    builder (resource: string = '') {\r\n       return super.builder('admin/' + resource);\r\n    }\r\n\r\n    getUser() {\r\n       return this.builder()\r\n                    .list({},'user');\r\n    }\r\n\r\n    changePassword(data) {\r\n        let observable = this.http.post(this.url + '/change-password', data, {headers: this.header});\r\n        return observable.toPromise()\r\n                    .then((res) => {\r\n                        return res.json() || {};\r\n                    });\r\n    }\r\n\r\n    editProfile(data) {\r\n        let observable = this.http.post(this.url + '/edit-profile', data, {headers: this.header});\r\n        return observable.toPromise()\r\n                    .then((res) => {\r\n                        return res.json() || {};\r\n                    });\r\n    }\r\n\r\n    login(data) {\r\n       let observable = this.http.post(environment.server_url + '/oauth/token',data);\r\n        return this.toPromise(observable).then((res) => {\r\n            this.eventEmitter.emit();\r\n            return res;\r\n        });\r\n    }\r\n\r\n    registry(data) {\r\n        let observable = this.http.post(environment.server_url + '/registry',data);\r\n        return this.toPromise(observable).then((res) => {\r\n            this.eventEmitter.emit();\r\n            return res;\r\n        });\r\n    }\r\n\r\n\r\n    logout() {\r\n        let observable = this.http.get(this.url + 'logout',{headers: this.header});\r\n        return this.toPromise(observable).then((res) => {\r\n            this.eventEmitter.emit();\r\n            return res;\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Leiviton/Documents/teste/web/src/app/user/services/auth.service.ts"],"sourceRoot":"webpack:///"}